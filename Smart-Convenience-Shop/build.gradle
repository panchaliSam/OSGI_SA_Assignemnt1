plugins {
    id 'java'
    id 'biz.aQute.bnd.builder' version '6.3.1'
}

group = 'com.osgi'
version = '1.0.0'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.osgi:osgi.core:6.0.0'
    implementation 'org.apache.felix:org.apache.felix.framework:7.0.5'

    // Felix Gogo Shell (optional, for debugging)
    implementation 'org.apache.felix:org.apache.felix.gogo.shell:1.1.4'
    implementation 'org.apache.felix:org.apache.felix.gogo.runtime:1.1.4'
    implementation 'org.apache.felix:org.apache.felix.gogo.command:1.0.2'
}

// Ensure UTF-8 encoding for compiled classes
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// INVENTORY PRODUCER Bundle Configuration
task producerJar(type: Jar) {
    archiveBaseName.set("inventory-producer")
    destinationDirectory.set(file("$buildDir/libs"))

    manifest {
        attributes(
                'Bundle-ManifestVersion': '2',
                'Bundle-Name': 'Inventory Producer',
                'Bundle-SymbolicName': 'inventory_producer',
                'Bundle-Version': project.version,
                'Import-Package': 'org.osgi.framework',
                'Export-Package': 'inventory_producer',
                'Bundle-Activator': 'inventory_producer.ServiceActivator'
        )
    }
    from sourceSets.main.output
}

//  INVENTORY CONSUMER Bundle Configuration
task consumerJar(type: Jar) {
    archiveBaseName.set("inventory-consumer")
    destinationDirectory.set(file("$buildDir/libs"))

    manifest {
        attributes(
                'Bundle-ManifestVersion': '2',
                'Bundle-Name': 'Inventory Consumer',
                'Bundle-SymbolicName': 'inventory_consumer',
                'Bundle-Version': project.version,
                'Import-Package': 'org.osgi.framework, inventory_producer',
                'Export-Package': 'inventory_consumer',
                'Bundle-Activator': 'inventory_consumer.ServiceActivator'
        )
    }
    from sourceSets.main.output
}

// PREFERENCE PRODUCER Bundle Configuration
task preferenceProducerJar(type: Jar) {
    archiveBaseName.set("preference-producer")
    destinationDirectory.set(file("$buildDir/libs"))

    manifest {
        attributes(
                'Bundle-ManifestVersion': '2',
                'Bundle-Name': 'Preference Producer',
                'Bundle-SymbolicName': 'preference_producer',
                'Bundle-Version': project.version,
                'Import-Package': 'org.osgi.framework',
                'Export-Package': 'preference_producer',
                'Bundle-Activator': 'preference_producer.ServiceActivator'
        )
    }
    from sourceSets.main.output
}

// PREFERENCE CONSUMER Bundle Configuration
task preferenceConsumerJar(type: Jar) {
    archiveBaseName.set("preference-consumer")
    destinationDirectory.set(file("$buildDir/libs"))

    manifest {
        attributes(
                'Bundle-ManifestVersion': '2',
                'Bundle-Name': 'Preference Consumer',
                'Bundle-SymbolicName': 'preference_consumer',
                'Bundle-Version': project.version,
                'Import-Package': 'org.osgi.framework, preference_producer',
                'Export-Package': 'preference_consumer',
                'Bundle-Activator': 'preference_consumer.ServiceActivator'
        )
    }
    from sourceSets.main.output
}

//ORDER PRODUCER Bundle Configuration
task orderProducerJar(type: Jar) {
    archiveBaseName.set("order-producer")
    destinationDirectory.set(file("$buildDir/libs"))

    manifest {
        attributes(
                'Bundle-ManifestVersion': '2',
                'Bundle-Name': 'Order Producer',
                'Bundle-SymbolicName': 'order_producer',
                'Bundle-Version': project.version,
                'Import-Package': 'org.osgi.framework',
                'Export-Package': 'order_producer',
                'Bundle-Activator': 'order_producer.OrderServiceActivator'
        )
    }
    from sourceSets.main.output
}

//ORDER CONSUMER Bundle Configuration
task orderConsumerJar(type: Jar) {
    archiveBaseName.set("order-consumer")
    destinationDirectory.set(file("$buildDir/libs"))

    manifest {
        attributes(
                'Bundle-ManifestVersion': '2',
                'Bundle-Name': 'Order Consumer',
                'Bundle-SymbolicName': 'order_consumer',
                'Bundle-Version': project.version,
                'Import-Package': 'org.osgi.framework, order_producer',
                'Export-Package': 'order_consumer',
                'Bundle-Activator': 'order_consumer.OrderConsumerActivator'
        )
    }
    from sourceSets.main.output
}

//PRICING PRODUCER Bundle Configuration
task pricingProducerJar(type: Jar){
    archiveBaseName.set("pricing-producer")
    destinationDirectory.set(file("$buildDir/libs"))

    manifest {
        attributes(
                'Bundle-ManifestVersion': '2',
                'Bundle-Name': 'Pricing Producer',
                'Bundle-SymbolicName': 'pricing_producer',
                'Bundle-Version': project.version,
                'Import-Package': 'org.osgi.framework',
                'Export-Package': 'pricing_producer',
                'Bundle-Activator': 'pricing_producer.ServiceActivator'
        )
    }
    from sourceSets.main.output
}

//PRICING CONSUMER Bundle Configuration
task pricingConsumerJar(type: Jar){
    archiveBaseName.set("pricing-consumer")
    destinationDirectory.set(file("$buildDir/libs"))

    manifest {
        attributes(
                'Bundle-ManifestVersion': '2',
                'Bundle-Name': 'Pricing Consumer',
                'Bundle-SymbolicName': 'pricing_consumer',
                'Bundle-Version': project.version,
                'Import-Package': 'org.osgi.framework, pricing_producer',
                'Export-Package': 'pricing_producer',
                'Bundle-Activator': 'pricing_producer.ServiceActivator'
        )
    }
    from sourceSets.main.output
}

//Ensure all JAR tasks are included in the build
tasks.build.dependsOn producerJar, consumerJar, preferenceProducerJar, preferenceConsumerJar, orderProducerJar, orderConsumerJar, pricingProducerJar, pricingConsumerJar